#-----------------------------------------------------------------
# pycparser: func_defs.py
#
# Using pycparser for printing out all the functions defined in a
# C file.
#
# This is a simple example of traversing the AST generated by
# pycparser. Call it from the root directory of pycparser.
#
# Eli Bendersky [http://eli.thegreenplace.net]
# License: BSD
#-----------------------------------------------------------------
from __future__ import print_function
import sys

# This is not required if you've installed pycparser into
# your site-packages/ with setup.py
sys.path.extend(['.', '..'])

from pycparser import c_parser, c_ast, parse_file

nodelist=[]
# A simple visitor for FuncDef nodes that prints the names and
# locations of function definitions.
class FuncDefVisitor(c_ast.NodeVisitor):
    def __init__(self, funcname):
        self.funcname = funcname
    def visit_FuncDef(self, node):
	count=0
	count+=1
	print(" ")	
	print("#############In", node.decl.name , "function##########")
	print(" ")
	
        #print('%s at %s in %s also %s in %s can we %s' % (node.decl.name, node.decl.coord, node.decl.storage,node.decl.funcspec, node.decl.bitsize, node.coord))
	
	print('%s at %s in %s ' % (node.decl.name, node.decl.coord,	node.decl.storage))

	Caller=node.decl.name
	for i, child in enumerate(node.body.block_items or []):
			nodelist.append(("block_items[%d]" % i, child))
			
	#p=tuple(nodelist)
	#print(p)
	#print ("Harsha Rocks!!!")
	callee= nodelist[0][1].name.name
	location= node.decl.coord
	if (str(callee) != str(Caller) and str(callee)== str(funcname)):
		print(callee , "called by" , Caller , "at location" , location)
	
		
	

def show_func_defs(filename, funcname):
    # Note that cpp is used. Provide a path to your own cpp or
    # make sure one exists in PATH.
    ast = parse_file(filename, use_cpp=True,
                     cpp_args=r'-Iutils/fake_libc_include')

    v = FuncDefVisitor(funcname)
    v.visit(ast)


if __name__ == "__main__":
    if len(sys.argv) > 1:
        filename  = sys.argv[1]
	funcname  = sys.argv[2]
    show_func_defs(filename, funcname)
    	
